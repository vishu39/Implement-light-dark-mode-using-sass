@import "~@angular/material/theming";
@include mat-core();

$mat-primary-scheme: (
  100: #c5cae9,
  500: #61699a,
  700: #303f9f,
  contrast: (
    100: rgba(0, 0, 0, 0.87),
    500: #ffffff,
    700: #ffffff,
  ),
);
$mat-accent-scheme: (
  100: #ff80ab,
  500: #ff4081,
  700: #f50057,
  contrast: (
    100: rgba(0, 0, 0, 0.87),
    500: rgba(0, 0, 0, 0.87),
    700: #ffffff,
  ),
);
$mat-primary-palette: mat-palette($mat-primary-scheme);
$mat-accent-palette: mat-palette($mat-accent-scheme);

$app-light-theme: mat-light-theme($mat-primary-palette, $mat-accent-palette);

// .theme-light {
//   @include angular-material-theme($app-light-theme);
//   color: grey;
//   background-color: white;
// }

$app-dark-theme: mat-dark-theme($mat-primary-palette, $mat-accent-palette);

// .theme-dark {
//   @include angular-material-theme($app-dark-theme);
//   color: whitesmoke;
//   background-color: grey;
// }
@media (prefers-color-scheme: dark) {
  body {
    @include angular-material-theme($app-dark-theme);
    background: grey;
    color: white;
  }
}
@media (prefers-color-scheme: light) {
  body {
    @include angular-material-theme($app-light-theme);
    background: white;
    color: black;
  }
}
body[theme="dark"] {
  @include angular-material-theme($app-dark-theme);
  background: grey;
  color: white;
}
body[theme="light"] {
  @include angular-material-theme($app-light-theme);
  background: white;
  color: black;
}

// -----------------------------------------------------------------------------------------------

// // Custom Theming for Angular Material
// // For more information: https://material.angular.io/guide/theming
// @use "@angular/material" as mat;
// // Plus imports for other components in your app.

// // Include the common styles for Angular Material. We include this here so that you only
// // have to load a single css file for Angular Material in your app.
// // Be sure that you only ever include this mixin once!
// @include mat.core();

// // Define the palettes for your theme using the Material Design palettes available in palette.scss
// // (imported above). For each palette, you can optionally specify a default, lighter, and darker
// // hue. Available color palettes: https://material.io/design/color/
// $app-primary: mat.define-palette(mat.$indigo-palette);
// $app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $app-warn: mat.define-palette(mat.$red-palette);

// // Create the theme object. A theme consists of configurations for individual
// // theming systems such as "color" or "typography".
// $app-theme-light: mat.define-light-theme(
//   (
//     color: (
//       primary: $app-primary,
//       accent: $app-accent,
//       warn: $app-warn,
//     ),
//   )
// );
// $app-dark-theme: mat.define-dark-theme(
//   (
//     color: (
//       primary: $app-primary,
//       accent: $app-accent,
//       warn: $app-warn,
//     ),
//   )
// );

// // Include theme styles for core and each component used in your app.
// // Alternatively, you can import and @include the theme mixins for each component
// // that you are using.

// @include mat.all-component-themes($app-theme-light);

// /* You can add global styles to this file, and also import other style files */
// ----------------------------------------------------------------------------------------

html,
body {
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

//---------------------------------------------------------------------------------------
// .theme-dark {
// }
// .theme-light {
//   // @include mat.all-component-themes($app-theme-light);
// }
// $text-color: (
//   dark: black,
//   light: #fff,
// );

// $component-color: (
//   dark: black,
//   light: #b168fa,
// );
// $theme-color: (
//   theme-dark: black,
//   theme-light: #fff,
// );

// @function theme($color-name) {
//   @return map-get($theme-color, $color-name);
// }

// @function component($color-name) {
//   @return map-get($component-color, $color-name);
// }
// @function color($color-name) {
//   @return map-get($text-color, $color-name);
// }
